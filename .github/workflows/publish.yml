name: Publish Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version bump type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
      packages:
        description: "Packages to publish"
        required: true
        type: choice
        options:
          - all
          - player
          - query
          - cli

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.2.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm lint

      - name: Build packages
        run: pnpm build

      - name: Run type checking
        run: pnpm check-types

      # - name: Run tests
      #   run: pnpm test

      - name: Bump version
        run: |
          if [ "${{ github.event.inputs.packages }}" = "all" ]; then
            pnpm version:${{ github.event.inputs.version }}
          else
            if [ "${{ github.event.inputs.packages }}" = "player" ]; then
              cd packages/player && npm version ${{ github.event.inputs.version }} --no-git-tag-version
            elif [ "${{ github.event.inputs.packages }}" = "query" ]; then
              cd packages/query && npm version ${{ github.event.inputs.version }} --no-git-tag-version
            elif [ "${{ github.event.inputs.packages }}" = "cli" ]; then
              cd packages/create-smart-tv && npm version ${{ github.event.inputs.version }} --no-git-tag-version
            fi
          fi

      - name: Get version and prepare release
        id: get_version
        run: |
          # Get version from the first published package
          if [ "${{ github.event.inputs.packages }}" = "all" ] || [ "${{ github.event.inputs.packages }}" = "player" ]; then
            VERSION=$(node -p "require('./packages/player/package.json').version")
          elif [ "${{ github.event.inputs.packages }}" = "query" ]; then
            VERSION=$(node -p "require('./packages/query/package.json').version")
          elif [ "${{ github.event.inputs.packages }}" = "cli" ]; then
            VERSION=$(node -p "require('./packages/create-smart-tv/package.json').version")
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version to be released: v$VERSION"

      - name: Commit version changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "chore: bump version to v${{ steps.get_version.outputs.version }}" || echo "No changes to commit"

      - name: Create and push tag
        run: |
          echo "Creating tag v${{ steps.get_version.outputs.version }}"
          git tag -a "v${{ steps.get_version.outputs.version }}" -m "Release v${{ steps.get_version.outputs.version }}"
          git push origin "v${{ steps.get_version.outputs.version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ## What's Changed

            ### Packages to Publish
            ${{ github.event.inputs.packages == 'all' && '- @smart-tv/player\n- @smart-tv/query\n- create-smart-tv' || format('- {0}', github.event.inputs.packages) }}

            ### Version Bump
            - Type: ${{ github.event.inputs.version }}
            - Version: v${{ steps.get_version.outputs.version }}

            **Full Changelog**: https://github.com/${{ github.repository }}/commits/v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Publish all packages
        if: github.event.inputs.packages == 'all'
        run: pnpm publish:packages --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish player package
        if: github.event.inputs.packages == 'player'
        run: pnpm publish:player --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish query package
        if: github.event.inputs.packages == 'query'
        run: pnpm publish:query --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish CLI package
        if: github.event.inputs.packages == 'cli'
        run: pnpm publish:cli --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Pull Request for version changes
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: bump version to v${{ steps.get_version.outputs.version }}"
          branch: release-v${{ steps.get_version.outputs.version }}
          title: "chore: Release v${{ steps.get_version.outputs.version }}"
          body: |
            ## ðŸš€ Release v${{ steps.get_version.outputs.version }}

            This PR updates package versions after successful publishing to npm.

            ### Published Packages
            ${{ github.event.inputs.packages == 'all' && '- @smart-tv/player\n- @smart-tv/query\n- create-smart-tv' || format('- {0}', github.event.inputs.packages) }}

            ### Version Bump
            - Type: **${{ github.event.inputs.version }}**
            - Version: **v${{ steps.get_version.outputs.version }}**

            ### What's Completed
            - âœ… Git tag `v${{ steps.get_version.outputs.version }}` created
            - âœ… GitHub Release created
            - âœ… Packages published to npm

            Please review and merge to update the main branch with the new versions.
          labels: release
          assignees: ${{ github.actor }}
